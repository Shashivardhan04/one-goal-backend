const mongoose = require('mongoose');

const organizationSchema = new mongoose.Schema({
  organization_id: {
    type: String,
    required: true
  },
  address: { type: String, default: '' },
  admin_contact_number: { type: String, default: '' },
  admin_email_id: { type: String, default: '' },
  admin_first_name: { type: String, default: '' },
  admin_last_name: { type: String, default: '' },
  auth_id: { type: String, default: '' },
  city: { type: String, default: '' },
  country: { type: String, default: '' },
  created_at: { type: Date, default: Date.now },
  created_by:{type:String,enum:["MANUAL","AUTO"]},
  designations: { type: [String], default: [] },
  email_id: { type: String, default: '' },
  mobile_number: { type: String, default: '' },
  no_of_employees: { type: String, default: '' },
  organization_name: { type: String, default: '' },
  state: { type: String, default: '' },
  status: { type: String, enum: ["ACTIVE", "INACTIVE"], default: "ACTIVE" },
  teams: { type: [String], default: [] },

  /// migration keys need to be added /////////
  pincode: { type: String, default: "" },
  business_domain: { type: String, default: "Real Estate" },
  cost_per_license: { type: Number, default: 0 },
  grace_period: { type: Number, default: 0 },
  valid_from: { type: Date, default: Date.now},
  valid_till: { type: Date,default: null },
  GSTIN: { type: String, default: "" },
  current_active_status: { type: Boolean, default: true },
  organization_active_status: { type: Boolean, default: true },
  service_id: { type: String, default: "" },
  package_id: { type: String, default: "" },
  oid: { type: String, default: "" },
  is_freeze_enabled:{ type: Boolean, default: false },
  modified_at:{ type: Date, default: Date.now},
  shift_active_status:{ type: Boolean, default: false },
  organization_active_status:{ type: Boolean, default: true },
  CGST:{ type: Number, default: 0 },
  IGST:{ type: Number, default: 0 },
  communication_mail:{ type: String, default: "" },
  contact_person_email:{ type: String, default: "" },
  contact_person_no:{ type: String, default: "" },
  days_before_notifying:{ type: String, default: "" },
  grace_past_days:{ type: String, default: "" },
  is_IGST:{ type: Boolean, default: true },
  is_approval_enabled:{type:Boolean, default:false},
  is_live_tracking_enabled:{type:[String],default:[]},
  is_past_date_approval_enabled:{type:Boolean,default:false},
  is_shift_activation_enable:{type:Boolean,default:false},
  org_count:{ type: Number, default: 0 },
  org_mail_id:{type:[String],default:[]},
  organization_mails:{type:[String],default:[]},
  otp_verification_before_export:{type:Boolean,default:false},
  otp_verification_mail:{ type: String, default: "" },
  payment_status:{type:Boolean,default:true},
  shift_end_time:{ type: String, default: "" },
  shift_reminder:{ type: String, default: "" },
  shift_reminder_after:{ type: String, default: "" },
  shift_start_time:{ type: String, default: "" },
  show_branch_name:{type:Boolean,default:true},
  show_organization_name:{type:Boolean,default:true},
  show_reporting_manager:{type:Boolean,default:true},
  show_team_name:{type:Boolean,default:true},
  plus_valid_till:{ type: Date, default: null},
  is_call_recording_enabled: {type:Boolean,default:false},
  is_call_recording_subscribed: {type:Boolean,default:false},
  fail_at:{ type: String, default: '' },
});

const newOrganizations = mongoose.model('organizations', organizationSchema);

module.exports = newOrganizations;
